<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0812.0353                               -->
<workbook original-version='18.1' source-build='2022.2.1 (20222.22.0812.0353)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='US_Covid_Cases_and_Deaths Extract' inline='true' name='federated.10b5k700j85q7u1g522261p6hzsy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='US_Covid_Cases_and_Deaths' name='hyper.12cy1b607cfti61f4oixt06dj2zo'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/vince/SJSU Grad School/Semester 1/DATA_230_data_visualization/Project_data/US_Covid_Cases_and_Deaths.hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='hyper.12cy1b607cfti61f4oixt06dj2zo' name='Extract' table='[Extract].[Extract]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='hyper.12cy1b607cfti61f4oixt06dj2zo' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>submission_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[submission_date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>submission_date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>3074</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>56</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tot_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tot_cases]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>tot_cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>23765</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conf_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[conf_cases]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>conf_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>19271</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prob_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[prob_cases]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>prob_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>13939</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_case</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_case]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>new_case</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6219</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pnew_case</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pnew_case]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>pnew_case</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2462</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tot_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tot_death]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>tot_death</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>12549</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conf_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[conf_death]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>conf_death</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>10249</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prob_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[prob_death]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>prob_death</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4169</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_death]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>new_death</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>496</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pnew_death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pnew_death]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>pnew_death</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>198</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>created_at</remote-name>
            <remote-type>135</remote-type>
            <local-name>[created_at]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>created_at</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>5469</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>consent_cases</remote-name>
            <remote-type>129</remote-type>
            <local-name>[consent_cases]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>consent_cases</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>consent_deaths</remote-name>
            <remote-type>129</remote-type>
            <local-name>[consent_deaths]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>consent_deaths</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death per Case' datatype='real' name='[Calculation_307370713170128898]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([new_death])/SUM([new_case])' />
      </column>
      <column caption='Date ' datatype='date' name='[Date (copy)_307370713177325585]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[submission_date]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF]' role='measure' type='quantitative' />
      <column caption='Conf Cases' datatype='integer' name='[conf_cases]' role='measure' type='quantitative' />
      <column caption='Conf Death' datatype='integer' name='[conf_death]' role='measure' type='quantitative' />
      <column caption='Consent Cases' datatype='string' name='[consent_cases]' role='dimension' type='nominal' />
      <column caption='Consent Deaths' datatype='string' name='[consent_deaths]' role='dimension' type='nominal' />
      <column caption='Created At' datatype='datetime' name='[created_at]' role='dimension' type='ordinal' />
      <column caption='New Case' datatype='integer' name='[new_case]' role='measure' type='quantitative' />
      <column caption='New Death' datatype='integer' name='[new_death]' role='measure' type='quantitative' />
      <column caption='Pnew Case' datatype='integer' name='[pnew_case]' role='measure' type='quantitative' />
      <column caption='Pnew Death' datatype='integer' name='[pnew_death]' role='measure' type='quantitative' />
      <column caption='Prob Cases' datatype='integer' name='[prob_cases]' role='measure' type='quantitative' />
      <column caption='Prob Death' datatype='integer' name='[prob_death]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;AK&quot;' value='Alaska' />
          <alias key='&quot;AL&quot;' value='Alabama' />
          <alias key='&quot;AR&quot;' value='Arkansas' />
          <alias key='&quot;AS&quot;' value='American Samoa' />
          <alias key='&quot;AZ&quot;' value='Arizona' />
          <alias key='&quot;CA&quot;' value='California' />
          <alias key='&quot;CO&quot;' value='Colorado' />
          <alias key='&quot;CT&quot;' value='Connecticut' />
          <alias key='&quot;DC&quot;' value='District of Columbia' />
          <alias key='&quot;DE&quot;' value='Delaware' />
          <alias key='&quot;FL&quot;' value='Florida' />
          <alias key='&quot;GA&quot;' value='Georgia' />
          <alias key='&quot;GU&quot;' value='Guam' />
          <alias key='&quot;HI&quot;' value='Hawaii' />
          <alias key='&quot;IA&quot;' value='Iowa' />
          <alias key='&quot;ID&quot;' value='Idaho' />
          <alias key='&quot;IL&quot;' value='Illinois' />
          <alias key='&quot;IN&quot;' value='Indiana' />
          <alias key='&quot;KS&quot;' value='Kansas' />
          <alias key='&quot;KY&quot;' value='Kentucky' />
          <alias key='&quot;LA&quot;' value='Louisiana' />
          <alias key='&quot;MA&quot;' value='Massachusetts' />
          <alias key='&quot;MD&quot;' value='Maryland' />
          <alias key='&quot;ME&quot;' value='Maine' />
          <alias key='&quot;MI&quot;' value='Michigan' />
          <alias key='&quot;MN&quot;' value='Minnesota' />
          <alias key='&quot;MO&quot;' value='Missouri' />
          <alias key='&quot;MP&quot;' value='Northern Mariana Islands' />
          <alias key='&quot;MS&quot;' value='Mississippi' />
          <alias key='&quot;MT&quot;' value='Montana' />
          <alias key='&quot;NC&quot;' value='North Carolina' />
          <alias key='&quot;ND&quot;' value='North Dakota' />
          <alias key='&quot;NE&quot;' value='Nebraska' />
          <alias key='&quot;NH&quot;' value='New Hampshire' />
          <alias key='&quot;NJ&quot;' value='New Jersey' />
          <alias key='&quot;NM&quot;' value='New Mexico' />
          <alias key='&quot;NV&quot;' value='Nevada' />
          <alias key='&quot;NY&quot;' value='New York' />
          <alias key='&quot;OH&quot;' value='Ohio' />
          <alias key='&quot;OK&quot;' value='Oklahoma' />
          <alias key='&quot;OR&quot;' value='Oregon' />
          <alias key='&quot;PA&quot;' value='Pennsylvania' />
          <alias key='&quot;PR&quot;' value='Puerto Rico' />
          <alias key='&quot;RI&quot;' value='Rhode Island' />
          <alias key='&quot;SC&quot;' value='South Carolina' />
          <alias key='&quot;SD&quot;' value='South Dakota' />
          <alias key='&quot;TN&quot;' value='Tennessee' />
          <alias key='&quot;TX&quot;' value='Texas' />
          <alias key='&quot;UT&quot;' value='Utah' />
          <alias key='&quot;VA&quot;' value='Virginia' />
          <alias key='&quot;VI&quot;' value='Virgin Islands' />
          <alias key='&quot;VT&quot;' value='Vermont' />
          <alias key='&quot;WA&quot;' value='Washington' />
          <alias key='&quot;WI&quot;' value='Wisconsin' />
          <alias key='&quot;WV&quot;' value='West Virginia' />
          <alias key='&quot;WY&quot;' value='Wyoming' />
        </aliases>
      </column>
      <column caption='Date' datatype='date' name='[submission_date]' role='dimension' type='ordinal' />
      <column caption='Tot Cases' datatype='integer' name='[tot_cases]' role='measure' type='quantitative' />
      <column caption='Tot Death' datatype='integer' name='[tot_death]' role='measure' type='quantitative' />
      <column-instance column='[tot_cases]' derivation='Attribute' name='[attr:tot_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_case]' derivation='Avg' name='[avg:new_case:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tot_cases]' derivation='Avg' name='[avg:tot_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[conf_cases]' derivation='Sum' name='[diff:sum:conf_cases:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[tot_cases]' derivation='Sum' name='[diff:sum:tot_cases:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[tot_cases]' derivation='Median' name='[med:tot_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[tot_cases]' derivation='None' name='[none:tot_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[conf_cases]' derivation='Sum' name='[pcdf:sum:conf_cases:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[new_case]' derivation='Sum' name='[pcdf:sum:new_case:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.10b5k700j85q7u1g522261p6hzsy].[submission_date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[new_case]' derivation='Sum' name='[pcdf:sum:new_case:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[new_death]' derivation='Sum' name='[pcdf:sum:new_death:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.10b5k700j85q7u1g522261p6hzsy].[submission_date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[new_death]' derivation='Sum' name='[pcdf:sum:new_death:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[tot_cases]' derivation='Sum' name='[pcdf:sum:tot_cases:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[tot_cases]' derivation='Sum' name='[pcrk:sum:tot_cases:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[tot_cases]' derivation='Sum' name='[pcto:sum:tot_cases:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.10b5k700j85q7u1g522261p6hzsy].[state]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[tot_cases]' derivation='Sum' name='[pcto:sum:tot_cases:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[conf_cases]' derivation='Sum' name='[sum:conf_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[conf_death]' derivation='Sum' name='[sum:conf_death:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_case]' derivation='Sum' name='[sum:new_case:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_death]' derivation='Sum' name='[sum:new_death:qk]' pivot='key' type='quantitative' />
      <column-instance column='[prob_cases]' derivation='Sum' name='[sum:prob_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tot_cases]' derivation='Sum' name='[sum:tot_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tot_death]' derivation='Sum' name='[sum:tot_death:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_case]' derivation='Sum' name='[win:sum:new_case:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-10' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[new_case]' derivation='Sum' name='[win:sum:new_case:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='[federated.10b5k700j85q7u1g522261p6hzsy].[submission_date]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[new_case]' derivation='Sum' name='[win:sum:new_case:qk:5]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-10' ordering-field='[federated.10b5k700j85q7u1g522261p6hzsy].[submission_date]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[new_case]' derivation='Sum' name='[win:sum:new_case:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[new_death]' derivation='Sum' name='[win:sum:new_death:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-10' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[new_death]' derivation='Sum' name='[win:sum:new_death:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[tot_cases]' derivation='Sum' name='[win:sum:tot_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[diff:sum:conf_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[pcdf:sum:conf_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[sum:conf_cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[sum:tot_death:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[attr:tot_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[avg:tot_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[diff:sum:tot_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[med:tot_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[none:tot_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[pcdf:sum:tot_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[pcrk:sum:tot_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[pcto:sum:tot_cases:qk:1]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[pcto:sum:tot_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[sum:tot_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[win:sum:tot_cases:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[avg:new_case:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[pcdf:sum:new_case:qk:2]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[pcdf:sum:new_case:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[usr:Calculation_307370713174761485:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[usr:Calculation_307370713174839310:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[win:sum:new_case:qk:2]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[win:sum:new_case:qk:4]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[win:sum:new_case:qk:5]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[win:sum:new_case:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[sum:conf_death:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[sum:prob_cases:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[pcdf:sum:new_death:qk:4]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[pcdf:sum:new_death:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_death:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[win:sum:new_death:qk:2]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.10b5k700j85q7u1g522261p6hzsy].[win:sum:new_death:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#e15759'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Extract' id='Extract (Extract.Extract)_2BF3A322C79B4E4FBE8E6E40175F51BF'>
            <properties context=''>
              <relation connection='hyper.12cy1b607cfti61f4oixt06dj2zo' name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='US_County Extract' inline='true' name='federated.13dwdnr181g4yx15xp2qm1u70bri' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='US_County' name='hyper.1ddaiiq0a1ikj0178qnsh07it9yl'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/vince/SJSU Grad School/Semester 1/DATA_230_data_visualization/Project_data/US_County.hyper' default-settings='yes' server='' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='hyper.1ddaiiq0a1ikj0178qnsh07it9yl' name='Extract' table='[Extract].[Extract]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='hyper.1ddaiiq0a1ikj0178qnsh07it9yl' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>913</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_58466B83B2D3431099E66913563C582B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3470</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_58466B83B2D3431099E66913563C582B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>54</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_58466B83B2D3431099E66913563C582B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>6406</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_58466B83B2D3431099E66913563C582B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>70956</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_58466B83B2D3431099E66913563C582B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>7468</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_58466B83B2D3431099E66913563C582B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Case Death Ratio' datatype='real' name='[Calculation_1170372991145177088]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[deaths]/[cases]' />
      </column>
      <column caption='Date Text' datatype='string' name='[Calculation_271623390893596673]' role='measure' type='nominal'>
        <calculation class='tableau' formula='&quot;Dates from &quot;+&#13;&#10;&#13;&#10;str(month(min([date])))+&quot;/&quot;+&#13;&#10;&#13;&#10;str(day(min([date])))+&quot;/&quot;+&#13;&#10;&#13;&#10;str(year(min([date])))+&quot; to &quot;+&#13;&#10;&#13;&#10;str(month(max([date])))+&quot;/&quot;+&#13;&#10;&#13;&#10;str(day(max([date])))+&quot;/&quot;+&#13;&#10;&#13;&#10;str(year(max([date])))' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_58466B83B2D3431099E66913563C582B]' role='measure' type='quantitative' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='County' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='integer' name='[fips]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[cases]' derivation='Avg' name='[avg:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Avg' name='[avg:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='Avg' name='[diff:avg:cases:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[deaths]' derivation='Avg' name='[diff:avg:deaths:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[cases]' derivation='Sum' name='[diff:sum:cases:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[cases]' derivation='Sum' name='[pcdf:sum:cases:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[cases]' derivation='Sum' name='[pcrk:sum:cases:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[cases]' derivation='Sum' name='[pcto:sum:cases:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.13dwdnr181g4yx15xp2qm1u70bri].[state]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[deaths]' derivation='Sum' name='[pcto:sum:deaths:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='state, county'>
          <field>[state]</field>
          <field>[county]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13dwdnr181g4yx15xp2qm1u70bri].[avg:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13dwdnr181g4yx15xp2qm1u70bri].[diff:avg:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13dwdnr181g4yx15xp2qm1u70bri].[diff:sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13dwdnr181g4yx15xp2qm1u70bri].[pcdf:sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13dwdnr181g4yx15xp2qm1u70bri].[pcrk:sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13dwdnr181g4yx15xp2qm1u70bri].[pcto:sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.13dwdnr181g4yx15xp2qm1u70bri]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13dwdnr181g4yx15xp2qm1u70bri].[avg:deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13dwdnr181g4yx15xp2qm1u70bri].[diff:avg:deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13dwdnr181g4yx15xp2qm1u70bri].[pcto:sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2021</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2020</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Extract' id='Extract (Extract.Extract)_58466B83B2D3431099E66913563C582B'>
            <properties context=''>
              <relation connection='hyper.1ddaiiq0a1ikj0178qnsh07it9yl' name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_64181DF021DB4A569D9358DE4BF5C9B0]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Expected Deaths' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Forecast Indicator' />
        <param name='target' value='Expected Deaths' />
      </command>
    </action>
    <action caption='Filter1' name='[Action2_56187F6C46474C03BABF9F62CF265A49]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Impact per State' type='sheet' worksheet='Cases per State' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Impact%20per%20State?%5Bfederated.10b5k700j85q7u1g522261p6hzsy%5D.%5Bstate%5D~s0=&lt;[federated.10b5k700j85q7u1g522261p6hzsy].[state]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Cases per State' />
        <param name='target' value='Impact per State' />
      </command>
    </action>
    <datasources>
      <datasource caption='US_Covid_Cases_and_Deaths Extract' name='federated.10b5k700j85q7u1g522261p6hzsy' />
    </datasources>
    <datasource-dependencies datasource='federated.10b5k700j85q7u1g522261p6hzsy'>
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;AK&quot;' value='Alaska' />
          <alias key='&quot;AL&quot;' value='Alabama' />
          <alias key='&quot;AR&quot;' value='Arkansas' />
          <alias key='&quot;AS&quot;' value='American Samoa' />
          <alias key='&quot;AZ&quot;' value='Arizona' />
          <alias key='&quot;CA&quot;' value='California' />
          <alias key='&quot;CO&quot;' value='Colorado' />
          <alias key='&quot;CT&quot;' value='Connecticut' />
          <alias key='&quot;DC&quot;' value='District of Columbia' />
          <alias key='&quot;DE&quot;' value='Delaware' />
          <alias key='&quot;FL&quot;' value='Florida' />
          <alias key='&quot;GA&quot;' value='Georgia' />
          <alias key='&quot;GU&quot;' value='Guam' />
          <alias key='&quot;HI&quot;' value='Hawaii' />
          <alias key='&quot;IA&quot;' value='Iowa' />
          <alias key='&quot;ID&quot;' value='Idaho' />
          <alias key='&quot;IL&quot;' value='Illinois' />
          <alias key='&quot;IN&quot;' value='Indiana' />
          <alias key='&quot;KS&quot;' value='Kansas' />
          <alias key='&quot;KY&quot;' value='Kentucky' />
          <alias key='&quot;LA&quot;' value='Louisiana' />
          <alias key='&quot;MA&quot;' value='Massachusetts' />
          <alias key='&quot;MD&quot;' value='Maryland' />
          <alias key='&quot;ME&quot;' value='Maine' />
          <alias key='&quot;MI&quot;' value='Michigan' />
          <alias key='&quot;MN&quot;' value='Minnesota' />
          <alias key='&quot;MO&quot;' value='Missouri' />
          <alias key='&quot;MP&quot;' value='Northern Mariana Islands' />
          <alias key='&quot;MS&quot;' value='Mississippi' />
          <alias key='&quot;MT&quot;' value='Montana' />
          <alias key='&quot;NC&quot;' value='North Carolina' />
          <alias key='&quot;ND&quot;' value='North Dakota' />
          <alias key='&quot;NE&quot;' value='Nebraska' />
          <alias key='&quot;NH&quot;' value='New Hampshire' />
          <alias key='&quot;NJ&quot;' value='New Jersey' />
          <alias key='&quot;NM&quot;' value='New Mexico' />
          <alias key='&quot;NV&quot;' value='Nevada' />
          <alias key='&quot;NY&quot;' value='New York' />
          <alias key='&quot;OH&quot;' value='Ohio' />
          <alias key='&quot;OK&quot;' value='Oklahoma' />
          <alias key='&quot;OR&quot;' value='Oregon' />
          <alias key='&quot;PA&quot;' value='Pennsylvania' />
          <alias key='&quot;PR&quot;' value='Puerto Rico' />
          <alias key='&quot;RI&quot;' value='Rhode Island' />
          <alias key='&quot;SC&quot;' value='South Carolina' />
          <alias key='&quot;SD&quot;' value='South Dakota' />
          <alias key='&quot;TN&quot;' value='Tennessee' />
          <alias key='&quot;TX&quot;' value='Texas' />
          <alias key='&quot;UT&quot;' value='Utah' />
          <alias key='&quot;VA&quot;' value='Virginia' />
          <alias key='&quot;VI&quot;' value='Virgin Islands' />
          <alias key='&quot;VT&quot;' value='Vermont' />
          <alias key='&quot;WA&quot;' value='Washington' />
          <alias key='&quot;WI&quot;' value='Wisconsin' />
          <alias key='&quot;WV&quot;' value='West Virginia' />
          <alias key='&quot;WY&quot;' value='Wyoming' />
        </aliases>
      </column>
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Actual Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='US_Covid_Cases_and_Deaths Extract' name='federated.10b5k700j85q7u1g522261p6hzsy' />
          </datasources>
          <datasource-dependencies datasource='federated.10b5k700j85q7u1g522261p6hzsy'>
            <column caption='New Case' datatype='integer' name='[new_case]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[submission_date]' derivation='None' name='[none:submission_date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AS&quot;' value='American Samoa' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;GU&quot;' value='Guam' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MP&quot;' value='Northern Mariana Islands' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;PR&quot;' value='Puerto Rico' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VI&quot;' value='Virgin Islands' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[submission_date]' role='dimension' type='ordinal' />
            <column-instance column='[new_case]' derivation='Sum' name='[sum:new_case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submission_date]' derivation='Day-Trunc' name='[tdy:submission_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:qk]' included-values='in-range'>
            <min>#2020-01-21#</min>
            <max>#2020-05-07#</max>
          </filter>
          <slices>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:qk]</column>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]' field-type='quantitative' max='#2020-05-07 11:49:59#' min='#2020-01-17 12:10:01#' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]' scope='rows' value='Number of Cases' />
            <format attr='display' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]</rows>
        <cols>[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]</cols>
      </table>
      <simple-id uuid='{FA263D55-95B6-46E5-A745-1E33EAB06D47}' />
    </worksheet>
    <worksheet name='Actual Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='US_Covid_Cases_and_Deaths Extract' name='federated.10b5k700j85q7u1g522261p6hzsy' />
          </datasources>
          <datasource-dependencies datasource='federated.10b5k700j85q7u1g522261p6hzsy'>
            <column caption='New Death' datatype='integer' name='[new_death]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[submission_date]' derivation='None' name='[none:submission_date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AS&quot;' value='American Samoa' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;GU&quot;' value='Guam' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MP&quot;' value='Northern Mariana Islands' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;PR&quot;' value='Puerto Rico' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VI&quot;' value='Virgin Islands' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[submission_date]' role='dimension' type='ordinal' />
            <column-instance column='[new_death]' derivation='Sum' name='[sum:new_death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submission_date]' derivation='Day-Trunc' name='[tdy:submission_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:qk]' included-values='in-range'>
            <min>#2020-01-21#</min>
            <max>#2020-05-07#</max>
          </filter>
          <slices>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:qk]</column>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]' field-type='quantitative' max='#2020-05-07 11:49:59#' min='#2020-01-17 12:10:01#' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_death:qk]' scope='rows' value='Number of Deaths' />
            <format attr='display' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_death:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#79706e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_death:qk]</rows>
        <cols>[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]</cols>
      </table>
      <simple-id uuid='{06AD4F3B-5683-49A0-A28B-EDFFFFD17900}' />
    </worksheet>
    <worksheet name='COVID-19 Timeline'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Timeline</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='US_County Extract' name='federated.13dwdnr181g4yx15xp2qm1u70bri' />
          </datasources>
          <datasource-dependencies datasource='federated.13dwdnr181g4yx15xp2qm1u70bri'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.13dwdnr181g4yx15xp2qm1u70bri].[none:date:qk]' included-values='in-range'>
            <min>#2020-01-21#</min>
            <max>#2022-05-13#</max>
          </filter>
          <slices>
            <column>[federated.13dwdnr181g4yx15xp2qm1u70bri].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:deaths:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]' scope='cols' value='Date' />
            <format attr='tick-color' field='[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]' value='#000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dashed' />
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='dashed' />
            <format attr='text-format' id='refline0' value='*m/d/yy' />
            <format attr='text-format' id='refline1' value='*m/d/yy' />
            <format attr='text-format' id='refline2' value='*m/d/yy' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='stroke-size' id='refline1' value='1' />
            <format attr='stroke-size' id='refline2' value='1' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='stroke-size' id='refline3' value='1' />
            <format attr='line-visibility' id='refline3' value='on' />
            <format attr='line-pattern-only' id='refline3' value='dashed' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='stroke-color' id='annotation_0' value='#333333' />
            <format attr='stroke-color' id='annotation_2' value='#333333' />
            <format attr='stroke-color' id='annotation_4' value='#333333' />
            <format attr='stroke-color' id='annotation_3' value='#333333' />
            <format attr='rounding' id='annotation_3' value='small' />
            <format attr='rounding' id='annotation_4' value='small' />
            <format attr='rounding' id='annotation_0' value='small' />
            <format attr='rounding' id='annotation_2' value='small' />
            <format attr='fill-color' id='annotation_3' value='#ff00004e' />
            <format attr='fill-color' id='annotation_4' value='#ddebf0e6' />
            <format attr='fill-color' id='annotation_2' value='#ddebf0e6' />
            <format attr='fill-color' id='annotation_0' value='#ddebf0e7' />
            <format attr='rounding' id='annotation_5' value='small' />
            <format attr='fill-color' id='annotation_5' value='#ddebf0e7' />
            <format attr='stroke-color' id='annotation_5' value='#333333' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-pane' value='#2020-01-21 00:00:00#' value-column='[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]' z-order='3' />
            <reference-line axis-column='[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-pane' value='#2020-03-15 00:00:00#' value-column='[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]' z-order='1' />
            <reference-line axis-column='[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label-type='automatic' scope='per-pane' value='#2021-11-26 00:00:00#' value-column='[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]' z-order='2' />
            <reference-line axis-column='[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label-type='automatic' scope='per-pane' value='#2020-12-15 00:00:00#' value-column='[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]' z-order='4' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#79706e' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk] + [federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:deaths:qk])</rows>
        <cols>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='212'>
            <formatted-text>
              <run bold='true'>&lt;</run>
              <run bold='true'>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</run>
              <run bold='true'>&gt;: CDC identifies the first case of COVID in the U.S.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1</value>
                    <value>#2020-01-21 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='69' y='-175' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Nov. 26, 2021: WHO classifies a new variance of COVID-19, now known as Omicron.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>46741656</value>
                    <value>#2021-11-26 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='34' y='72' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>&lt;</run>
              <run bold='true'>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</run>
              <run bold='true'>&gt;: The first recorded death in the US of an individual with COVID-19.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:deaths:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:deaths:qk]</field>
                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>70</value>
                    <value>1</value>
                    <value>#2020-02-29 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='136' y='-79' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0'><![CDATA[<[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]>: States begin to implement shutdowns in response to COVID.]]></run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'>The NYC public school system (1.1 million students) is shut down</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:deaths:qk]</field>
                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>3240</value>
                    <value>63</value>
                    <value>#2020-03-15 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='240' y='-160' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]>: First COVID-19 vaccine was administered in the US]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:deaths:qk]</field>
                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>16301690</value>
                    <value>277157</value>
                    <value>#2020-12-15 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='70' y='144' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{F567D33E-5D89-4900-9800-8F26464CA1ED}' />
    </worksheet>
    <worksheet name='Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='US_County Extract' name='federated.13dwdnr181g4yx15xp2qm1u70bri' />
          </datasources>
          <datasource-dependencies datasource='federated.13dwdnr181g4yx15xp2qm1u70bri'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.13dwdnr181g4yx15xp2qm1u70bri].[none:date:qk]' filter-group='3' included-values='in-range'>
            <min>#2022-05-13#</min>
            <max>#2022-05-13#</max>
          </filter>
          <slices>
            <column>[federated.13dwdnr181g4yx15xp2qm1u70bri].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C67D3967-BB5E-4F8A-81DD-05D9C2FA208C}' />
    </worksheet>
    <worksheet name='Cases per State'>
      <table>
        <view>
          <datasources>
            <datasource caption='US_Covid_Cases_and_Deaths Extract' name='federated.10b5k700j85q7u1g522261p6hzsy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.10b5k700j85q7u1g522261p6hzsy'>
            <column caption='Date ' datatype='date' name='[Date (copy)_307370713177325585]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[submission_date]' />
            </column>
            <column caption='New Case' datatype='integer' name='[new_case]' role='measure' type='quantitative' />
            <column-instance column='[Date (copy)_307370713177325585]' derivation='None' name='[none:Date (copy)_307370713177325585:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AS&quot;' value='American Samoa' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;GU&quot;' value='Guam' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MP&quot;' value='Northern Mariana Islands' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;PR&quot;' value='Puerto Rico' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VI&quot;' value='Virgin Islands' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[submission_date]' role='dimension' type='ordinal' />
            <column-instance column='[new_case]' derivation='Sum' name='[sum:new_case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submission_date]' derivation='Month-Trunc' name='[tmn:submission_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.10b5k700j85q7u1g522261p6hzsy].[none:Date (copy)_307370713177325585:qk]' included-values='in-range'>
            <min>#2020-01-22#</min>
            <max>#2022-05-13#</max>
          </filter>
          <filter class='quantitative' column='[federated.10b5k700j85q7u1g522261p6hzsy].[tmn:submission_date:qk]' filter-group='4' included-values='in-range'>
            <max>#2021-06-25 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[tmn:submission_date:qk]</column>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[none:Date (copy)_307370713177325585:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[Longitude (generated)]' field-type='quantitative' max='33827329.886062197' min='25192837.812989816' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[Latitude (generated)]' field-type='quantitative' max='8286912.3619171008' min='1866392.4833105016' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]' num-steps='20' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]' value='Total Cases'>
              <formatted-text>
                <run>Total Cases</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]' />
              <lod column='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' />
              <geometry column='[federated.10b5k700j85q7u1g522261p6hzsy].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10b5k700j85q7u1g522261p6hzsy].[Latitude (generated)]</rows>
        <cols>[federated.10b5k700j85q7u1g522261p6hzsy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2902CFD0-41D8-4864-ACEF-19F730A1FC90}' />
    </worksheet>
    <worksheet name='Cases per State (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='US_Covid_Cases_and_Deaths Extract' name='federated.10b5k700j85q7u1g522261p6hzsy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.10b5k700j85q7u1g522261p6hzsy'>
            <column caption='Date ' datatype='date' name='[Date (copy)_307370713177325585]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[submission_date]' />
            </column>
            <column caption='New Case' datatype='integer' name='[new_case]' role='measure' type='quantitative' />
            <column-instance column='[Date (copy)_307370713177325585]' derivation='None' name='[none:Date (copy)_307370713177325585:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AS&quot;' value='American Samoa' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;GU&quot;' value='Guam' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MP&quot;' value='Northern Mariana Islands' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;PR&quot;' value='Puerto Rico' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VI&quot;' value='Virgin Islands' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[submission_date]' role='dimension' type='ordinal' />
            <column-instance column='[new_case]' derivation='Sum' name='[sum:new_case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submission_date]' derivation='Month-Trunc' name='[tmn:submission_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date (copy)_307370713177325585]' derivation='Week-Trunc' name='[twk:Date (copy)_307370713177325585:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10b5k700j85q7u1g522261p6hzsy].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action2_56187F6C46474C03BABF9F62CF265A49]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.10b5k700j85q7u1g522261p6hzsy].[none:Date (copy)_307370713177325585:qk]' included-values='in-range'>
            <min>#2020-01-22#</min>
            <max>#2022-05-13#</max>
          </filter>
          <filter class='quantitative' column='[federated.10b5k700j85q7u1g522261p6hzsy].[tmn:submission_date:qk]' filter-group='4' included-values='in-range'>
            <max>#2021-06-25 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[none:Date (copy)_307370713177325585:qk]</column>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[Action (State)]</column>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[tmn:submission_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]' num-steps='20' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]</rows>
        <cols>[federated.10b5k700j85q7u1g522261p6hzsy].[twk:Date (copy)_307370713177325585:qk]</cols>
      </table>
      <simple-id uuid='{4A115A56-92BA-454A-B348-F26DA7D8351F}' />
    </worksheet>
    <worksheet name='Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='US_County Extract' name='federated.13dwdnr181g4yx15xp2qm1u70bri' />
          </datasources>
          <datasource-dependencies datasource='federated.13dwdnr181g4yx15xp2qm1u70bri'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.13dwdnr181g4yx15xp2qm1u70bri].[none:date:qk]' filter-group='3' included-values='in-range'>
            <min>#2022-05-13#</min>
            <max>#2022-05-13#</max>
          </filter>
          <slices>
            <column>[federated.13dwdnr181g4yx15xp2qm1u70bri].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{98BE51DF-03AB-4D58-BF8B-9BC358A3F9CD}' />
    </worksheet>
    <worksheet name='Expected Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='US_Covid_Cases_and_Deaths Extract' name='federated.10b5k700j85q7u1g522261p6hzsy' />
          </datasources>
          <datasource-dependencies datasource='federated.10b5k700j85q7u1g522261p6hzsy'>
            <column-instance column='[new_case]' derivation='Sum' forecast-column-base='[sum:new_case:qk]' forecast-column-type='forecast-value' name='[fVal:sum:new_case:qk]' pivot='key' type='quantitative' />
            <column caption='New Case' datatype='integer' name='[new_case]' role='measure' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AS&quot;' value='American Samoa' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;GU&quot;' value='Guam' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MP&quot;' value='Northern Mariana Islands' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;PR&quot;' value='Puerto Rico' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VI&quot;' value='Virgin Islands' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[submission_date]' role='dimension' type='ordinal' />
            <column-instance column='[new_case]' derivation='Sum' name='[sum:new_case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submission_date]' derivation='Day-Trunc' name='[tdy:submission_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[submission_date]' derivation='Day-Trunc' name='[tdy:submission_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:ok]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-22 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-23 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-24 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-25 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-26 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-27 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-28 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-29 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-30 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-31 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-01 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-02 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-03 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-04 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-05 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-06 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-07 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-08 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-09 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-10 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-11 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-12 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-13 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-14 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-15 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-16 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-17 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-18 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-19 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-20 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-21 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-22 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-23 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-24 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-25 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-26 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-27 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-28 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-29 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-01 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-02 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-03 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-04 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-05 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-06 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-07 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-08 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-09 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-10 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-11 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-12 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-13 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-14 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-15 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-16 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-17 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-18 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-19 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-20 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-21 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-22 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-23 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-24 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-25 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-26 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-27 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-28 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-29 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-30 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-31 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-04-01 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-04-02 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-04-03 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-04-04 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-04-05 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-04-06 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-04-07 00:00:00#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:ok]</column>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]' field-type='quantitative' max='#2020-05-07 10:45:58#' min='#2020-01-17 13:14:01.648#' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[fVal:sum:new_case:qk]' scope='rows' value='Number of Cases' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10b5k700j85q7u1g522261p6hzsy].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#33333367' />
                <format attr='stroke-size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10b5k700j85q7u1g522261p6hzsy].[fVal:sum:new_case:qk]</rows>
        <cols>[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]</cols>
        <forecast-specification auto-forecast-agg='false' band-confidence-level='90.000000' enabled='true' fill-type='fill-zero' forecast-agg='Day-Trunc' ignore-last='3' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{7F5B5B35-BA8D-4FBB-8B57-00FDF42B2480}' />
    </worksheet>
    <worksheet name='Expected Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='US_Covid_Cases_and_Deaths Extract' name='federated.10b5k700j85q7u1g522261p6hzsy' />
          </datasources>
          <datasource-dependencies datasource='federated.10b5k700j85q7u1g522261p6hzsy'>
            <column-instance column='[new_death]' derivation='Sum' forecast-column-base='[sum:new_death:qk]' forecast-column-type='forecast-value' name='[fVal:sum:new_death:qk]' pivot='key' type='quantitative' />
            <column caption='New Death' datatype='integer' name='[new_death]' role='measure' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AS&quot;' value='American Samoa' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;GU&quot;' value='Guam' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MP&quot;' value='Northern Mariana Islands' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;PR&quot;' value='Puerto Rico' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VI&quot;' value='Virgin Islands' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[submission_date]' role='dimension' type='ordinal' />
            <column-instance column='[new_death]' derivation='Sum' name='[sum:new_death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submission_date]' derivation='Day-Trunc' name='[tdy:submission_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[submission_date]' derivation='Day-Trunc' name='[tdy:submission_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:ok]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-22 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-23 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-24 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-25 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-26 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-27 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-28 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-29 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-30 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-01-31 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-01 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-02 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-03 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-04 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-05 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-06 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-07 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-08 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-09 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-10 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-11 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-12 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-13 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-14 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-15 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-16 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-17 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-18 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-19 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-20 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-21 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-22 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-23 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-24 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-25 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-26 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-27 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-28 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-02-29 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-01 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-02 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-03 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-04 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-05 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-06 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-07 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-08 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-09 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-10 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-11 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-12 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-13 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-14 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-15 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-16 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-17 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-18 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-19 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-20 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-21 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-22 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-23 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-24 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-25 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-26 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-27 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-28 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-29 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-30 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-03-31 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-04-01 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-04-02 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-04-03 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-04-04 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-04-05 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-04-06 00:00:00#' />
              <groupfilter function='member' level='[tdy:submission_date:ok]' member='#2020-04-07 00:00:00#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:ok]</column>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]' field-type='quantitative' max='#2020-05-07 10:46:40#' min='#2020-01-17 13:13:20.496#' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='cols' value='#3333334b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10b5k700j85q7u1g522261p6hzsy].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#33333367' />
                <format attr='stroke-size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10b5k700j85q7u1g522261p6hzsy].[fVal:sum:new_death:qk]</rows>
        <cols>[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]</cols>
        <forecast-specification auto-forecast-agg='false' band-confidence-level='90.000000' enabled='true' fill-type='fill-missing' forecast-agg='Day-Trunc' ignore-last='3' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{DFC422EA-45DB-439F-AC30-9C1356FD5D8D}' />
    </worksheet>
    <worksheet name='Vaccination Impact'>
      <table>
        <view>
          <datasources>
            <datasource caption='US_Covid_Cases_and_Deaths Extract' name='federated.10b5k700j85q7u1g522261p6hzsy' />
          </datasources>
          <datasource-dependencies datasource='federated.10b5k700j85q7u1g522261p6hzsy'>
            <column caption='Death per Case' datatype='real' name='[Calculation_307370713170128898]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([new_death])/SUM([new_case])' />
            </column>
            <column caption='WINDOW_AVG((ZN([Death per Case]) - LOOKUP(ZN([Death per Case]...' datatype='real' name='[Calculation_307370713173012491]' role='measure' type='quantitative' user:unnamed='Vaccination Impact'>
              <calculation class='tableau' formula='WINDOW_AVG((ZN([Calculation_307370713170128898]) - LOOKUP(ZN([Calculation_307370713170128898]), -1)) / ABS(LOOKUP(ZN([Calculation_307370713170128898]), -1)), -10, 10)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='New Case' datatype='integer' name='[new_case]' role='measure' type='quantitative' />
            <column caption='New Death' datatype='integer' name='[new_death]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[submission_date]' derivation='None' name='[none:submission_date:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;AK&quot;' value='Alaska' />
                <alias key='&quot;AL&quot;' value='Alabama' />
                <alias key='&quot;AR&quot;' value='Arkansas' />
                <alias key='&quot;AS&quot;' value='American Samoa' />
                <alias key='&quot;AZ&quot;' value='Arizona' />
                <alias key='&quot;CA&quot;' value='California' />
                <alias key='&quot;CO&quot;' value='Colorado' />
                <alias key='&quot;CT&quot;' value='Connecticut' />
                <alias key='&quot;DC&quot;' value='District of Columbia' />
                <alias key='&quot;DE&quot;' value='Delaware' />
                <alias key='&quot;FL&quot;' value='Florida' />
                <alias key='&quot;GA&quot;' value='Georgia' />
                <alias key='&quot;GU&quot;' value='Guam' />
                <alias key='&quot;HI&quot;' value='Hawaii' />
                <alias key='&quot;IA&quot;' value='Iowa' />
                <alias key='&quot;ID&quot;' value='Idaho' />
                <alias key='&quot;IL&quot;' value='Illinois' />
                <alias key='&quot;IN&quot;' value='Indiana' />
                <alias key='&quot;KS&quot;' value='Kansas' />
                <alias key='&quot;KY&quot;' value='Kentucky' />
                <alias key='&quot;LA&quot;' value='Louisiana' />
                <alias key='&quot;MA&quot;' value='Massachusetts' />
                <alias key='&quot;MD&quot;' value='Maryland' />
                <alias key='&quot;ME&quot;' value='Maine' />
                <alias key='&quot;MI&quot;' value='Michigan' />
                <alias key='&quot;MN&quot;' value='Minnesota' />
                <alias key='&quot;MO&quot;' value='Missouri' />
                <alias key='&quot;MP&quot;' value='Northern Mariana Islands' />
                <alias key='&quot;MS&quot;' value='Mississippi' />
                <alias key='&quot;MT&quot;' value='Montana' />
                <alias key='&quot;NC&quot;' value='North Carolina' />
                <alias key='&quot;ND&quot;' value='North Dakota' />
                <alias key='&quot;NE&quot;' value='Nebraska' />
                <alias key='&quot;NH&quot;' value='New Hampshire' />
                <alias key='&quot;NJ&quot;' value='New Jersey' />
                <alias key='&quot;NM&quot;' value='New Mexico' />
                <alias key='&quot;NV&quot;' value='Nevada' />
                <alias key='&quot;NY&quot;' value='New York' />
                <alias key='&quot;OH&quot;' value='Ohio' />
                <alias key='&quot;OK&quot;' value='Oklahoma' />
                <alias key='&quot;OR&quot;' value='Oregon' />
                <alias key='&quot;PA&quot;' value='Pennsylvania' />
                <alias key='&quot;PR&quot;' value='Puerto Rico' />
                <alias key='&quot;RI&quot;' value='Rhode Island' />
                <alias key='&quot;SC&quot;' value='South Carolina' />
                <alias key='&quot;SD&quot;' value='South Dakota' />
                <alias key='&quot;TN&quot;' value='Tennessee' />
                <alias key='&quot;TX&quot;' value='Texas' />
                <alias key='&quot;UT&quot;' value='Utah' />
                <alias key='&quot;VA&quot;' value='Virginia' />
                <alias key='&quot;VI&quot;' value='Virgin Islands' />
                <alias key='&quot;VT&quot;' value='Vermont' />
                <alias key='&quot;WA&quot;' value='Washington' />
                <alias key='&quot;WI&quot;' value='Wisconsin' />
                <alias key='&quot;WV&quot;' value='West Virginia' />
                <alias key='&quot;WY&quot;' value='Wyoming' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[submission_date]' role='dimension' type='ordinal' />
            <column-instance column='[new_case]' derivation='Sum' name='[sum:new_case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[submission_date]' derivation='Day-Trunc' name='[tdy:submission_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_307370713173012491]' derivation='User' name='[usr:Calculation_307370713173012491:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[new_case]' derivation='Sum' name='[win:sum:new_case:qk:2]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-10' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:qk]' included-values='in-range'>
            <min>#2020-06-15#</min>
            <max>#2021-06-15#</max>
          </filter>
          <slices>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:qk]</column>
            <column>[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[usr:Calculation_307370713173012491:qk]' scope='rows' value='Moving Average of % Difference in Death per Case Ratio' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='stroke-color' id='refline0' value='#3333334b' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='rounding' id='annotation_1' value='small' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-pane' value='#2020-12-15 00:00:00#' value-column='[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]' z-order='1' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.10b5k700j85q7u1g522261p6hzsy].[win:sum:new_case:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.10b5k700j85q7u1g522261p6hzsy].[usr:Calculation_307370713173012491:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.10b5k700j85q7u1g522261p6hzsy].[win:sum:new_case:qk:2] + [federated.10b5k700j85q7u1g522261p6hzsy].[usr:Calculation_307370713173012491:qk])</rows>
        <cols>[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Æ </run>
              <run bold='true'><![CDATA[<[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]>: Administration of first US COVID vaccine.]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]</field>
                      <field>[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>196666</value>
                    <value>#2020-12-15 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-155' y='-176' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'><![CDATA[<[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]>: Administration of first US COVID vaccine.]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.10b5k700j85q7u1g522261p6hzsy].[win:sum:new_case:qk:2]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]</field>
                      <field>[federated.10b5k700j85q7u1g522261p6hzsy].[win:sum:new_case:qk:2]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2020-12-15 00:00:00#</value>
                    <value>203092.63636363635</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-314' y='-94' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{8D8CB805-F519-44C8-A028-3CD271670FC9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='COVID in US (Up to May 2022)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>(Up to May 2022)</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='US_County Extract' name='federated.13dwdnr181g4yx15xp2qm1u70bri' />
      </datasources>
      <datasource-dependencies datasource='federated.13dwdnr181g4yx15xp2qm1u70bri'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='89625' id='28' param='horz' type-v2='layout-flow' w='98400' x='800' y='9375'>
            <zone h='89625' id='7' param='vert' type-v2='layout-flow' w='98400' x='800' y='9375'>
              <zone h='89625' id='5' type-v2='layout-basic' w='98400' x='800' y='9375'>
                <zone h='89625' id='3' name='COVID-19 Timeline' w='87600' x='11600' y='9375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='44813' id='32' name='Cases' w='10800' x='800' y='9375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='44812' id='33' name='Deaths' w='10800' x='800' y='54188'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='8375' id='29' name='COVID-19 Timeline' param='[federated.13dwdnr181g4yx15xp2qm1u70bri].[none:date:qk]' type-v2='filter' values='database' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>(Up to May 2022)</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='61' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='60' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='44813' id='32' is-fixed='true' name='Cases' w='10800' x='800' y='9375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8375' id='29' name='COVID-19 Timeline' param='[federated.13dwdnr181g4yx15xp2qm1u70bri].[none:date:qk]' type-v2='filter' values='database' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='89625' id='3' is-fixed='true' name='COVID-19 Timeline' w='87600' x='11600' y='9375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44812' id='33' is-fixed='true' name='Deaths' w='10800' x='800' y='54188'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8C49EF43-0293-4EDD-995E-C1EA5CAF6070}' />
    </dashboard>
    <dashboard name='COVID-19 in US' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='background-color' id='story-description_7' value='#fffef581' />
          <format attr='border-color' id='story-description_7' value='#333333' />
          <format attr='background-color' id='story-description_8' value='#fffef581' />
          <format attr='border-color' id='story-description_8' value='#333333' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='332' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone fixed-size='104' h='10788' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84129' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='15041'>
              <flipboard active-id='7' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Up until May 2022, there has been 79 million cases of COVID in the U.S. On Average, 1/4 Americans have contracted COVID in their life. ' captured-sheet='COVID in US (Up to May 2022)' id='1'>
                    <capturedDeltas>
                      <worksheet name='COVID-19 Timeline'>
                        <annotations>
                          <annotation delta-type='removed' id='0' />
                          <annotation delta-type='removed' id='2' />
                          <annotation delta-type='removed' id='3' />
                          <annotation delta-type='removed' id='4' />
                          <annotation delta-type='removed' id='5' />
                        </annotations>
                        <style delta-type='removed'>
                          <style-rule element='annotation'>
                            <format attr='fill-color' id='annotation_0' value='#ddebf0e7' />
                            <format attr='fill-color' id='annotation_2' value='#ddebf0e6' />
                            <format attr='fill-color' id='annotation_3' value='#ff00004e' />
                            <format attr='fill-color' id='annotation_4' value='#ddebf0e6' />
                            <format attr='fill-color' id='annotation_5' value='#ddebf0e7' />
                            <format attr='rounding' id='annotation_0' value='small' />
                            <format attr='rounding' id='annotation_2' value='small' />
                            <format attr='rounding' id='annotation_3' value='small' />
                            <format attr='rounding' id='annotation_4' value='small' />
                            <format attr='rounding' id='annotation_5' value='small' />
                            <format attr='stroke-color' id='annotation_0' value='#333333' />
                            <format attr='stroke-color' id='annotation_2' value='#333333' />
                            <format attr='stroke-color' id='annotation_3' value='#333333' />
                            <format attr='stroke-color' id='annotation_4' value='#333333' />
                            <format attr='stroke-color' id='annotation_5' value='#333333' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='In this story we will be taking a look at some of the major events in COVID and analyze their effect on the U.S.' captured-sheet='COVID in US (Up to May 2022)' id='5'>
                    <capturedDeltas>
                      <worksheet name='COVID-19 Timeline'>
                        <annotations>
                          <annotation class='point' delta-type='edited' id='0' mark-position='1' pullback='0' text-width='212'>
                            <formatted-text>
                              <run bold='true'>&lt;</run>
                              <run bold='true'>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</run>
                              <run bold='true'>&gt;: CDC identifies the first case of COVID in the U.S.</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>1</value>
                                    <value>#2020-01-21 00:00:00#</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='83' y='83' />
                          </annotation>
                          <annotation class='point' delta-type='edited' id='2' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run bold='true'>Nov. 26, 2021: WHO classifies a new variance of COVID-19, now known as Omicron.</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>46741656</value>
                                    <value>#2021-11-26 00:00:00#</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='29' y='101' />
                          </annotation>
                          <annotation class='point' delta-type='edited' id='4' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run bold='true' fontalignment='0'><![CDATA[<[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]>: States begin to implement shutdowns in response to COVID.]]></run>
                              <run fontalignment='0'>Æ&#10;</run>
                              <run bold='true' fontalignment='0'>The NYC public school system (1.1 million students) is shut down</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:deaths:qk]</field>
                                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>3240</value>
                                    <value>63</value>
                                    <value>#2020-03-15 00:00:00#</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='92' y='-161' />
                          </annotation>
                          <annotation class='point' delta-type='edited' id='5' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run fontcolor='#787878'>Æ </run>
                              <run bold='true'><![CDATA[<[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]>: First COVID-19 vaccine was administered in the US]]></run>
                              <run>Æ&#10;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:deaths:qk]</field>
                                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>16301690</value>
                                    <value>277157</value>
                                    <value>#2020-12-15 00:00:00#</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='70' y='105' />
                          </annotation>
                        </annotations>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Was the lockdown response appropriate? ' captured-sheet='COVID-19 Timeline' id='2'>
                    <capturedDeltas>
                      <worksheet name='COVID-19 Timeline'>
                        <filter class='quantitative' column='[federated.13dwdnr181g4yx15xp2qm1u70bri].[none:date:qk]' included-values='in-range'>
                          <min>#2020-01-21#</min>
                          <max>#2020-12-21#</max>
                        </filter>
                        <annotations>
                          <annotation delta-type='removed' id='0' />
                          <annotation delta-type='removed' id='3' />
                          <annotation class='point' delta-type='edited' id='4' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run bold='true' fontalignment='0'><![CDATA[<[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]>: States begin to implement shutdowns in response to COVID.]]></run>
                              <run fontalignment='0'>Æ&#10;</run>
                              <run bold='true' fontalignment='0'>The NYC public school system (1.1 million students) is shut down</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]</field>
                                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:deaths:qk]</field>
                                      <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>3240</value>
                                    <value>63</value>
                                    <value>#2020-03-15 00:00:00#</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='100' y='143' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]' field-type='quantitative' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.13dwdnr181g4yx15xp2qm1u70bri].[tdy:date:qk]' field-type='quantitative' max='#2020-07-21 00:00:00#' min='#2020-01-21 01:57:19#' range-type='fixed' scope='cols' type='space' />
                            <format attr='title' class='0' field='[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:cases:qk]' scope='rows' value='Total Cases' />
                            <format attr='title' class='0' field='[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:deaths:qk]' scope='rows' value='Total Deaths' />
                          </style-rule>
                        </style>
                        <style delta-type='removed'>
                          <style-rule element='annotation'>
                            <format attr='fill-color' id='annotation_0' value='#ddebf0e7' />
                            <format attr='fill-color' id='annotation_3' value='#ff00004e' />
                            <format attr='rounding' id='annotation_0' value='small' />
                            <format attr='rounding' id='annotation_3' value='small' />
                            <format attr='stroke-color' id='annotation_0' value='#333333' />
                            <format attr='stroke-color' id='annotation_3' value='#333333' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Let&apos;s narrow in on the number of new cases and deaths between 1/21/2020 and 5/7/2020 (1 month after the final stay at home order by South Carolina).' captured-sheet='Expected vs. Actual Cases' id='4'>
                    <capturedDeltas>
                      <worksheet name='Actual Deaths'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_death:qk]' field-type='quantitative' max='2500' min='-127' range-type='fixed' scope='rows' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                      <worksheet name='Expected Deaths'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[fVal:sum:new_death:qk]' field-type='quantitative' max='2500' min='-127' range-type='fixed' scope='rows' type='space' />
                            <format attr='title' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[fVal:sum:new_death:qk]' scope='rows' value='Number of Deaths' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Was the COVID vaccine effective? Or was it a ruse for the government to inject us with microchips?' captured-sheet='Vaccination Impact' id='6'>
                    <capturedDeltas>
                      <worksheet name='Vaccination Impact'>
                        <annotations>
                          <annotation class='point' delta-type='edited' id='1' mark-position='1' pullback='0' text-width='180'>
                            <formatted-text>
                              <run bold='true'><![CDATA[<[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]>: Administration of first US COVID vaccine.]]></run>
                              <run>Æ&#10;</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.10b5k700j85q7u1g522261p6hzsy].[win:sum:new_case:qk:2]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]</field>
                                      <field>[federated.10b5k700j85q7u1g522261p6hzsy].[win:sum:new_case:qk:2]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>#2020-12-15 00:00:00#</value>
                                    <value>203092.63636363635</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='-225' y='-14' />
                          </annotation>
                        </annotations>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[tdy:submission_date:qk]' scope='cols' value='Date' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Here is a geographical map indicating how each State is impacted by COVID.' captured-sheet='Impact per State' id='7'>
                    <currentDeltas>
                      <worksheet name='Cases per State'>
                        <filter class='quantitative' column='[federated.10b5k700j85q7u1g522261p6hzsy].[tmn:submission_date:qk]' included-values='in-range'>
                          <max>#2020-03-20 23:59:59#</max>
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[Latitude (generated)]' field-type='quantitative' max='6698587.1063781027' min='2631004.3970956081' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.10b5k700j85q7u1g522261p6hzsy].[Longitude (generated)]' field-type='quantitative' max='33455939.877330698' min='24800378.49295539' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.10b5k700j85q7u1g522261p6hzsy].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.10b5k700j85q7u1g522261p6hzsy].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]</field>
                                  <field>[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]</field>
                                  <field>[federated.10b5k700j85q7u1g522261p6hzsy].[Geometry (generated)]</field>
                                  <field>[federated.10b5k700j85q7u1g522261p6hzsy].[Latitude (generated)]</field>
                                  <field>[federated.10b5k700j85q7u1g522261p6hzsy].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;NY&quot;</value>
                                <value>32656</value>
                                <value>&quot;MULTIPOLYGON(((-73.9529 40.7389,-73.9524 40.7396,-73.9571 40.7396,-73.9608 40.7381,-73.9627 40.7388,-73.9605 40.7436,-73.957 40.7489,-73.9345 40.7715,-73.9098 40.7909,-73.7467 40.7804,-73.7297 40.8666,-73.5654 40.9153,-73.497 40.9234,-73.3912 40.939,-73.3304 40.93,-73.2192 40.9079,-73.1124 40.9701,-72.7741 40.9653,-72.6304 40.9831,-72.3016 41.1422,-72.3206 41.11,-72.238 41.0488,-72.165 41.0375,-72.0951 41.0033,-71.937 41.0784,-71.8561 41.0711,-71.9637 41.0251,-72.4315 40.857,-72.6368 40.795,-72.8689 40.7395,-73.0172 40.7502,-73.1678 40.6985,-73.2254 40.7188,-73.2875 40.6848,-73.4249 40.6619,-73.5758 40.5764,-73.7542 40.5842,-73.9405 40.5417,-73.9418 40.5547,-73.7574 40.612,-73.7667 40.6204,-73.7744 40.6246,-73.8583 40.6526,-73.8793 40.5804,-74.002 40.5714,-74.0411 40.63,-74.0096 40.6689,-74.0196 40.6794,-73.9944 40.7044,-73.9793 40.7058,-73.9742 40.7016,-73.9609 40.725,-73.9621 40.7339,-73.9586 40.7382,-73.9529 40.7389)),((-79.7619 42.2695,-79.4535 42.4112,-79.4075 42.4522,-79.2449 42.5332,-79.1352 42.5687,-79.0472 42.6913,-78.9184 42.7366,-78.8543 42.7838,-78.906 42.9105,-78.9196 42.9472,-79.012 42.9853,-79.0218 43.0143,-79.0074 43.0657,-79.0767 43.0804,-79.0704 43.1209,-79.0431 43.1392,-79.0638 43.2595,-78.6389 43.3571,-78.4655 43.3714,-78.1028 43.3755,-77.9956 43.3651,-77.7551 43.3368,-77.5774 43.2432,-77.3747 43.2762,-77.1466 43.29,-76.9426 43.2741,-76.7225 43.3437,-76.7168 43.3159,-76.617 43.4182,-76.4163 43.5216,-76.2307 43.5314,-76.1831 43.6793,-76.1999 43.6802,-76.2308 43.807,-76.2968 43.8566,-76.1272 43.8979,-76.1388 43.9415,-76.05 44.0049,-76.1689 43.959,-76.1415 44.0706,-76.2457 44.0648,-76.2817 44.0108,-76.2011 44.0229,-76.2545 43.9668,-76.3601 44.0709,-76.3655 44.11,-76.1641 44.2174,-76.0893 44.2325,-75.988 44.2915,-76.0246 44.3387,-75.9701 44.3425,-75.9128 44.3678,-75.8214 44.432,-75.8076 44.4717,-75.7669 44.5153,-75.6183 44.6196,-75.5049 44.7054,-75.3699 44.7829,-75.2847 44.8484,-75.1649 44.8935,-75.1347 44.915,-75.0647 44.9294,-74.9725 44.9835,-74.908 44.9835,-74.8875 45.0001,-74.8265 45.0159,-74.7603 44.995,-74.6686 45.0044,-74.6637 44.9996,-74.4575 44.997,-74.3352 44.9919,-74.1502 44.9914,-73.8746 45.0012,-73.6397 45.0035,-73.3431 45.0108,-73.3386 44.9194,-73.3562 44.9045,-73.3795 44.838,-73.335 44.8041,-73.3638 44.7453,-73.3697 44.6635,-73.3898 44.6172,-73.3615 44.5636,-73.3386 44.5468,-73.3067 44.5003,-73.2937 44.4382,-73.3336 44.3723,-73.3133 44.2641,-73.3634 44.2077,-73.3906 44.1911,-73.4379 44.0451,-73.4104 44.0265,-73.4089 43.9345,-73.3743 43.8743,-73.3893 43.8312,-73.3513 43.7698,-73.4052 43.6884,-73.4279 43.6344,-73.4286 43.584,-73.3981 43.5681,-73.3719 43.6245,-73.3026 43.6257,-73.2973 43.5797,-73.2586 43.5649,-73.2468 43.5258,-73.2546 43.3147,-73.2743 42.9437,-73.2787 42.8334,-73.2909 42.8019,-73.265 42.7459,-73.3525 42.51,-73.5081 42.0863,-73.4873 42.0496,-73.5181 41.6668,-73.551 41.2954,-73.4827 41.2128,-73.7278 41.1007,-73.6545 41.0113,-73.6587 40.9934,-73.6864 40.9454,-73.7929 40.8834,-73.7981 40.8167,-73.9158 40.7975,-73.9226 40.8022,-73.9087 40.8717,-73.9106 40.9153,-73.8662 41.0717,-73.8755 41.188,-73.9636 41.2484,-73.9595 41.1937,-73.9067 41.1421,-73.9025 40.9973,-74.2133 41.134,-74.3659 41.2029,-74.4576 41.2482,-74.6949 41.3574,-74.7547 41.425,-74.7904 41.4217,-74.8121 41.443,-74.8962 41.4402,-74.8909 41.4562,-74.9418 41.4835,-74.9816 41.4799,-74.9876 41.5087,-75.0697 41.602,-75.0442 41.618,-75.0532 41.7517,-75.1023 41.7865,-75.0757 41.7997,-75.1464 41.8509,-75.204 41.8699,-75.2578 41.8622,-75.2937 41.9546,-75.3103 41.949,-75.3596 41.9994,-75.7611 41.9978,-76.1468 41.9988,-76.9271 42.0017,-77.1247 41.9994,-77.7499 41.9988,-78.2066 41.9996,-78.9188 41.9981,-79.0612 41.9993,-79.7613 41.9988,-79.7619 42.2695)),((-73.9264 40.8772,-73.9291 40.7966,-73.9717 40.7445,-73.974 40.7322,-73.9708 40.7284,-73.9774 40.7102,-73.9975 40.7086,-74.0133 40.7013,-74.0163 40.702,-74.0191 40.7055,-74.0076 40.7543,-73.9264 40.8772)),((-74.0853 40.6489,-74.0523 40.5998,-74.1051 40.5532,-74.2486 40.4962,-74.2022 40.6309,-74.0853 40.6489)))&quot;</value>
                                <value>43.0</value>
                                <value>-75.49</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Cases per State (2)'>
                        <filter class='categorical' column='[federated.10b5k700j85q7u1g522261p6hzsy].[Action (State)]'>
                          <groupfilter function='member' level='[state]' member='&quot;NY&quot;' user:ui-action-filter='[Action2_56187F6C46474C03BABF9F62CF265A49]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='quantitative' column='[federated.10b5k700j85q7u1g522261p6hzsy].[tmn:submission_date:qk]' included-values='in-range'>
                          <max>#2020-03-20 23:59:59#</max>
                        </filter>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas>
                      <worksheet name='Cases per State'>
                        <filter class='quantitative' column='[federated.10b5k700j85q7u1g522261p6hzsy].[tmn:submission_date:qk]' included-values='in-range'>
                          <max>#2022-10-01 00:00:00#</max>
                        </filter>
                      </worksheet>
                      <worksheet name='Cases per State (2)'>
                        <filter class='quantitative' column='[federated.10b5k700j85q7u1g522261p6hzsy].[tmn:submission_date:qk]' included-values='in-range'>
                          <max>#2022-10-01 00:00:00#</max>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' h='15249' hidden='true' id='8' story-point-id='4' type-v2='text' w='23524' x='56496' y='28942'>
          <formatted-text>
            <run fontsize='10'>The actual number of cases/casualties begin to stabilize generally around the time that the stay at home orders were issued.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='14730' hidden='true' id='6' story-point-id='2' type-v2='text' w='45571' x='33071' y='21680'>
          <formatted-text>
            <run fontsize='12'>We still see a consistent rise in the number of COVID cases and deaths even after state-issued lockdowns. The question remains: How effective was the lockdown response?</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='10062' hidden='true' id='7' story-point-id='4' type-v2='text' w='26969' x='8169' y='28838'>
          <formatted-text>
            <run fontsize='10'>The trendlines and prediction using data up to 4/7/2020 suggests that there will be an exponential growth in the number of cases and casualties for the following month. </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='21162' hidden='true' id='9' story-point-id='6' type-v2='text' w='28740' x='53740' y='17324'>
          <formatted-text>
            <run fontsize='10'>Using moving averages (10 datapoints) to smooth out the curve, we see that there is a significant drop in the number of new COVID cases following Dec. 15, 2020. Suggesting a correlation between vaccination and being less likely to contract COVID.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='11100' hidden='true' id='10' story-point-id='6' type-v2='text' w='33268' x='47047' y='76349'>
          <formatted-text>
            <run fontsize='10'>However, our data does not suggest any improvements to mortality rates of COVID by getting the vaccine.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{ABD6C8EF-848B-4632-A38D-07ECCC319C08}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Expected vs. Actual Cases'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='US_Covid_Cases_and_Deaths Extract' name='federated.10b5k700j85q7u1g522261p6hzsy' />
      </datasources>
      <datasource-dependencies datasource='federated.10b5k700j85q7u1g522261p6hzsy'>
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <aliases>
            <alias key='&quot;AK&quot;' value='Alaska' />
            <alias key='&quot;AL&quot;' value='Alabama' />
            <alias key='&quot;AR&quot;' value='Arkansas' />
            <alias key='&quot;AS&quot;' value='American Samoa' />
            <alias key='&quot;AZ&quot;' value='Arizona' />
            <alias key='&quot;CA&quot;' value='California' />
            <alias key='&quot;CO&quot;' value='Colorado' />
            <alias key='&quot;CT&quot;' value='Connecticut' />
            <alias key='&quot;DC&quot;' value='District of Columbia' />
            <alias key='&quot;DE&quot;' value='Delaware' />
            <alias key='&quot;FL&quot;' value='Florida' />
            <alias key='&quot;GA&quot;' value='Georgia' />
            <alias key='&quot;GU&quot;' value='Guam' />
            <alias key='&quot;HI&quot;' value='Hawaii' />
            <alias key='&quot;IA&quot;' value='Iowa' />
            <alias key='&quot;ID&quot;' value='Idaho' />
            <alias key='&quot;IL&quot;' value='Illinois' />
            <alias key='&quot;IN&quot;' value='Indiana' />
            <alias key='&quot;KS&quot;' value='Kansas' />
            <alias key='&quot;KY&quot;' value='Kentucky' />
            <alias key='&quot;LA&quot;' value='Louisiana' />
            <alias key='&quot;MA&quot;' value='Massachusetts' />
            <alias key='&quot;MD&quot;' value='Maryland' />
            <alias key='&quot;ME&quot;' value='Maine' />
            <alias key='&quot;MI&quot;' value='Michigan' />
            <alias key='&quot;MN&quot;' value='Minnesota' />
            <alias key='&quot;MO&quot;' value='Missouri' />
            <alias key='&quot;MP&quot;' value='Northern Mariana Islands' />
            <alias key='&quot;MS&quot;' value='Mississippi' />
            <alias key='&quot;MT&quot;' value='Montana' />
            <alias key='&quot;NC&quot;' value='North Carolina' />
            <alias key='&quot;ND&quot;' value='North Dakota' />
            <alias key='&quot;NE&quot;' value='Nebraska' />
            <alias key='&quot;NH&quot;' value='New Hampshire' />
            <alias key='&quot;NJ&quot;' value='New Jersey' />
            <alias key='&quot;NM&quot;' value='New Mexico' />
            <alias key='&quot;NV&quot;' value='Nevada' />
            <alias key='&quot;NY&quot;' value='New York' />
            <alias key='&quot;OH&quot;' value='Ohio' />
            <alias key='&quot;OK&quot;' value='Oklahoma' />
            <alias key='&quot;OR&quot;' value='Oregon' />
            <alias key='&quot;PA&quot;' value='Pennsylvania' />
            <alias key='&quot;PR&quot;' value='Puerto Rico' />
            <alias key='&quot;RI&quot;' value='Rhode Island' />
            <alias key='&quot;SC&quot;' value='South Carolina' />
            <alias key='&quot;SD&quot;' value='South Dakota' />
            <alias key='&quot;TN&quot;' value='Tennessee' />
            <alias key='&quot;TX&quot;' value='Texas' />
            <alias key='&quot;UT&quot;' value='Utah' />
            <alias key='&quot;VA&quot;' value='Virginia' />
            <alias key='&quot;VI&quot;' value='Virgin Islands' />
            <alias key='&quot;VT&quot;' value='Vermont' />
            <alias key='&quot;WA&quot;' value='Washington' />
            <alias key='&quot;WI&quot;' value='Wisconsin' />
            <alias key='&quot;WV&quot;' value='West Virginia' />
            <alias key='&quot;WY&quot;' value='Wyoming' />
          </aliases>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88625' id='19' param='horz' type-v2='layout-flow' w='98400' x='800' y='10375'>
            <zone h='88625' id='5' type-v2='layout-basic' w='98400' x='800' y='10375'>
              <zone h='44313' id='1' name='Expected Cases' w='49200' x='800' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44313' id='3' name='Actual Cases' w='49200' x='50000' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44312' id='4' name='Expected Deaths' w='49200' x='800' y='54688'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='44312' id='9' name='Actual Deaths' w='49200' x='50000' y='54688'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='9375' id='21' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='7625' id='20' mode='dropdown' name='Expected Cases' param='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' type-v2='filter' values='database' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='43' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='42' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='7625' id='20' mode='dropdown' name='Expected Cases' param='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' type-v2='filter' values='database' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44313' id='1' is-fixed='true' name='Expected Cases' w='49200' x='800' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44313' id='3' is-fixed='true' name='Actual Cases' w='49200' x='50000' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44312' id='4' is-fixed='true' name='Expected Deaths' w='49200' x='800' y='54688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44312' id='9' is-fixed='true' name='Actual Deaths' w='49200' x='50000' y='54688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{66909BEA-23C4-47E4-94DA-74D0496A7BD3}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Impact per State'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='US_Covid_Cases_and_Deaths Extract' name='federated.10b5k700j85q7u1g522261p6hzsy' />
      </datasources>
      <datasource-dependencies datasource='federated.10b5k700j85q7u1g522261p6hzsy'>
        <column caption='Date' datatype='date' name='[submission_date]' role='dimension' type='ordinal' />
        <column-instance column='[submission_date]' derivation='Month-Trunc' name='[tmn:submission_date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='82432' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82432' x='800' y='1000'>
              <zone h='49000' id='3' name='Cases per State' show-title='false' w='82432' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='22' name='Cases per State (2)' w='82432' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='88625' id='41' is-fixed='true' type-v2='layout-basic' w='15968' x='83232' y='10375'>
            <zone h='39625' id='20' param='vert' type-v2='layout-flow' w='15968' x='83232' y='10375'>
              <zone h='8125' id='9' name='Cases per State' pane-specification-id='0' param='[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]' type-v2='color' w='15968' x='83232' y='10375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='49000' id='42' param='vert' type-v2='layout-flow' w='15968' x='83232' y='50000'>
              <zone h='49000' id='25' name='Cases per State (2)' pane-specification-id='0' param='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' type-v2='color' w='15968' x='83232' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='9375' id='30' name='Cases per State' param='[federated.10b5k700j85q7u1g522261p6hzsy].[tmn:submission_date:qk]' type-v2='filter' values='database' w='15968' x='83232' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='44' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='43' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='9375' id='30' name='Cases per State' param='[federated.10b5k700j85q7u1g522261p6hzsy].[tmn:submission_date:qk]' type-v2='filter' values='database' w='15968' x='83232' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Cases per State' show-title='false' w='82432' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Cases per State' pane-specification-id='0' param='[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]' type-v2='color' w='15968' x='83232' y='10375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='22' is-fixed='true' name='Cases per State (2)' w='82432' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49000' id='25' name='Cases per State (2)' pane-specification-id='0' param='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' type-v2='color' w='15968' x='83232' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{880A35F2-8FFE-4FAE-93A4-5E0DC405DA65}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' maximized='true' name='COVID-19 Timeline'>
      <cards>
        <edge name='left'>
          <strip size='145'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[none:date:qk]</field>
            <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[sum:deaths:qk]</field>
            <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{434B9DA9-E67C-4B8A-ADB5-39F98F62A854}' />
    </window>
    <window class='worksheet' name='Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[none:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B91E846E-73B9-4ACD-86F9-899F192F5820}' />
    </window>
    <window class='worksheet' name='Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13dwdnr181g4yx15xp2qm1u70bri].[none:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{193891D5-D87E-4782-A61C-0C72C9EEE536}' />
    </window>
    <window class='worksheet' name='Expected Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.10b5k700j85q7u1g522261p6hzsy].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:qk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[yr:submission_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6092E659-5340-47DD-B7E9-9FF58B5B8498}' />
    </window>
    <window class='worksheet' name='Actual Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:qk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[yr:submission_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14CCC756-A8FC-4673-9B60-188533C81C8D}' />
    </window>
    <window class='worksheet' name='Expected Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.10b5k700j85q7u1g522261p6hzsy].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:qk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[yr:submission_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79FFB0EA-DC5C-4CFE-A71E-AB4B9A92490F}' />
    </window>
    <window class='worksheet' name='Actual Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:qk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[yr:submission_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00CFF9F8-94A3-4443-92EE-A43A2592DDA3}' />
    </window>
    <window class='worksheet' name='Vaccination Impact'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:qk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[yr:submission_date:ok]</field>
            <field>[federated.12tdkbu1jh7hyz1ggqtpk1m2nyw4].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F55C1589-8469-4758-A9FE-E0F7FA66E4DF}' />
    </window>
    <window class='worksheet' name='Cases per State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.10b5k700j85q7u1g522261p6hzsy].[tmn:submission_date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:Date (copy)_307370713177325585:qk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:ok]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:qk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[sum:tot_cases:qk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[yr:submission_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{595A2AB3-8F0F-451A-A810-FFD3B821F1BD}' />
    </window>
    <window class='worksheet' name='Cases per State (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:Date (copy)_307370713177325585:qk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:ok]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:submission_date:qk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[sum:tot_cases:qk]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[yr:Date (copy)_307370713177325585:ok]</field>
            <field>[federated.10b5k700j85q7u1g522261p6hzsy].[yr:submission_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{983487EA-5A67-4FD8-8E14-7FFCE4F98846}' />
    </window>
    <window class='dashboard' name='COVID in US (Up to May 2022)'>
      <viewpoints>
        <viewpoint name='COVID-19 Timeline'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Cases'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Deaths'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FB56A5AC-3837-44AE-AD56-5CA700A15F22}' />
    </window>
    <window class='dashboard' name='Expected vs. Actual Cases'>
      <viewpoints>
        <viewpoint name='Actual Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Actual Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Expected Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Expected Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BCA224A3-D0D7-4D98-B208-6BD593D2CB16}' />
    </window>
    <window class='dashboard' name='Impact per State'>
      <viewpoints>
        <viewpoint name='Cases per State'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.10b5k700j85q7u1g522261p6hzsy].[sum:new_case:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Cases per State (2)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.10b5k700j85q7u1g522261p6hzsy].[none:state:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{59497AD4-90D7-415E-9F15-21BBD1EDB76B}' />
    </window>
    <window class='dashboard' name='COVID-19 in US'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{AE15216C-55E0-46F0-AB9E-38C311E27A9A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Actual Cases' width='192'>
      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
      4jzm/wDu+dwlXZvJWgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Actual Deaths' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJJklEQVR4nO3d32/aWBrG8cc+GNvEdhpoJtmoVToXM9Lmquqf3n+jN10pUm86o4pplIGm
      BAjgn+ecvYiwNgOjhU5IZN7nc0XTCE5VfzGG18ax1loQCeU+1h2xI2qiRwvAGPNYd0X0ZB4t
      AKImYgAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEa23yS2ma4suXL+j1ephMJkiSBFVVoSxL
      xHGMXq+363US7cRGAQRBgCiKEEURFosFiqKAMQatVgvz+RxHR0cwxnAeiBpnowBGoxGm0ynS
      NIXrunAcB1pr5HmOKIrgui6stVBK7Xq9RI/KeaxxaK01A6DG4UEwicYASDQGQKIxABKNAZBo
      DIBEYwAkGgMg0RgAicYASDQGQKJtNAyntUa/38fp6Skmkwk6nQ6qqkJVVYiiCJ1OZ9frJNqJ
      jYbh8jzHcDjEbDZDEAQA7i+FuJwCPT8/h9YajuPsfMFEj2mjPcDd3R0GgwFevHiB6XT6YA8Q
      xzHHoamxOA5NovEgmERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJttE0
      aJ7n+Pr1K3zfx3g8RhRFKMsSWmtEUYRXr17tep1EO7FRAL7vIwxDFEWBoijgui48z0MQBNBa
      wxjDy6NTI238BRmj0Qi9Xg+Hh4cIwxBaa5RlicPDQ54PQI3F8wFINB4Ek2gMgERjACQaAyDR
      GACJxgBINAZAojEAEo0BkGgMgERjACTaxuPQw+EQcRxjPB7D9/0Hl0c/Pj7e9TqJdmLjcWil
      FAaDwYPLonuehzRNOQ5NjbXxOPRgMMDJyQkmkwkcx4ExBmma8vLo1GgchybReBBMojEAEo0B
      kGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgbDcNZa1GWJTzPQ1mWcBwH1loYY+B5HmeA
      qLE2CqAoCvT7fZydneHy8hK9Xg9VVcFaiyAI8ObNmzoIoibZKAClFKy1uLq6Qp7nK6PPy4FS
      ng9ATbPROHRRFPXl0ZfP9MYYaK0RBAE8z+M4NDUSzwcg0fguEInGAEg0BkCiMQASjQGQaGsD
      yLIMw+GQ7+vT3lsbwMePH/H+/Xt+skt7b20ASZLg4uICjuM89XqIntRKAJPJBL/99ttzrIXo
      ya3MAkVRhNFoBICzPbT/VvYASim8e/cOAPgSiPbe2mnQTqeDoijqPUCe5+j3+3j58iX6/T7i
      OK4vjx7HMV6/fv2kiyZ6LGsDuL29ffDs7/s+Dg4OoJTC6ekpsiyD4zgIgqCeDOXl0amJVgKw
      1mI+nyPPc7ju/SukNE0xHo9RVRWKosDR0RG01vUXZPDy6NRUKwF8/vwZR0dHyLIMxhgopRCG
      IS4uLp5jfUQ7tXIQ3O12sVgsEMcxD4Jp760EsFgsMBgMEEXRc6yH6EmtBPDq1Su8fv0a19fX
      3APQ3lsJwHGc+gCXs0C079aeE/z9+3ckSQLP8za+I54TTE20dhju+voaHz584B6A9t7fng9w
      fX3ND7Zo760N4PDwEIvFov4gjGhfrWzhWZbh06dPCMOQL4Fo7619FyiOY2it+TYo7b2VAHzf
      h+/7+OWXX55jPURPau00aJIkmM/n9Z/zPMeff/6Jg4MDjEYjHBwc1OPQURTh5OTkyRZM9JjW
      BtDtdvH777/X7wL5vg/P85CmKYIggNa6/nme5xyHpsZaCWD5bK+Uqo8B0jTFcDjE8fExFosF
      Op0OtNbI8xxxHHMcmhprJYCyLHF9fY27u7v6Z2EY4u3bt0+6MKKnsHIQPJ1OkWUZzs7OnmM9
      RE+K3w9AovGjXhKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABJt7TTo35lOp7i9vUUURdBa
      oyxLxHGMJEl2tT6indoqgNFohNvbWwCorxu6DILj0NREWwWwHI9eXjgrTVOOQ1OjcRiORONB
      MInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASbatp0KurK5RlWV8aXWuN
      KIpwfn6+q/UR7dRWAcxmM8xmM3S7XbiuC6UUrLW8PDo11lbj0FmWYTgcIkmSB2eEHRwccBya
      GonnA5BoPAgm0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASLStpkGNMfj06ROS
      JKlHouM4xunp6a7WR7RTWwXw+fNnTCYTRFEE13URhiGKouA4NDXWVgG8efMGURTBcZwH49C8
      PDo1FcehSTQeBJNoDIBEYwAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAk2lbDcEVRYDwe
      I4oiaK1RVRU6nQ5839/V+oh2aqthuNlshqurK3ieB2MMHMeB67o4Pz+H1hquyx0KNctWe4Cb
      mxsAqJ/9jTHodDp1CAyAmmarPcDySzFarfturLX1hs9xaGoing9AovE1C4nGAEg0BkCiMQAS
      jQGQaAyARGMAJBoDINEYAIm21SwQ0b6w1uLyPx8ZADWLNQbzxRzWWMRJ8vDvrEVVlcizHIvF
      HN+/3eDm2xC337/DVQpKKVRVhdvRCEWe4+Rfpz8+C2StxeXlJaIows8///xDs0DTyQTj29GP
      PDztWFXeT/tqo9FqeWi1WnCc+59XWsNag1bLg9dqYT6f49twgG/DAayxCMIQcZLADwIEQYB2
      24fWFfI8R5HnMOZ+k7PWoCgK5FmGsiiglIJqteA4Tr0OYwzm8xkW8zmqsgIABGEI13VxN53A
      VQqu48LY+6uTey0PXruNTqeD7suX+OnkBEfd3n0cuoJyFY66XfhBANd1/9keII5jWGthjKm/
      L0BrDQBQSq297boujDEAgK9/9PHHly//ZAm0I8uN0XXd+//bsgQAtLwWlLrfbLTW0FWFsNPB
      y+Of8Ou/L+AAyPP7Z+AiL5BnKWazGZRSCPwAhy+O6g3ccRy02214bQ+e10alKxh9v20sn5eV
      Umi32/CDAG3fh7UWjuPUz+bGGCilYIyB67r1tvZ329/ydpZlUEr9sz3Azc0NoihCGIacBqVG
      4jg0ica3QUk0BkCiMQASjQGQaAyARGMAJNqjjkIsP2xYflix7e1tfxfADz3Ojzz+/3qMx1ne
      z19v//V3lxcge6p/564e8/89/nP9O/8LJSvcEd3Off4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='COVID in US (Up to May 2022)' width='192'>
      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
      6Vnz/2ZK1Rl494QcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='COVID-19 Timeline' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='COVID-19 in US' width='192'>
      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
      wP8PKwXbkXwK+B4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='25' name='Cases' width='104'>
      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
      ZQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cases per State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cases per State (2)' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='25' name='Deaths' width='84'>
      iVBORw0KGgoAAAANSUhEUgAAAFQAAAAZCAYAAACvrQlzAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAEAElEQVRoge2ZX0hbZxjGn9ZAKTrozTZGGTLY5dhYz5lEScAwehhxw62mK5gu4h9GOkZp
      ow4J6GguFpbBtm7StVdLwEFkEWZshggVtHhhzdq5tQVriRHKNEGFiFGTE3h2Ef8lJibCaQpy
      fnAuvve83/N+PIfz5j3kGElCRTGOv+gDHDVUQxVGNVRhVEMVRjVUYVRDFUY1VGFUQxVGNVRh
      VEMVRjVUYVRDFaZ0hqZW8MDTAZOhGqJYDYOpA/1PkvnzIwO4VC1CNHswvx2b98AsihD3XV9j
      /KDSC6NwtkjQiyJEUQ+pxYnRhVR2FlYeeNBhMqBaFCHqJbQ4xxE9rA5LgsygS6LU6WcoLpNM
      MDLuoklnYV84V36MAVsdHX29bGx0M2fKtnLQxTpbgLF8CbEAbToTHSMhxmWScpyhEQdNOhsD
      ezbFxnpYZ3JwJBRnOu0//ts/zL8PqVMaQ5d8tH74I6flzHDY3UiDc5JZYcYCNtY5JrgWdhc0
      dLizjq5gtsIuawFbjhoyJ50G2gJrW+sZ3jxvpW8xf53idMjSvPLLS4iceRdvazLDlbUSXpuY
      wpO9wdU/ce3GKdhtNSgvQvrWymewCJq8909UVEDe2NwX39yQUVFxIr34axD9r3+ED17NX6co
      HZSqh5ZX4KWnc7u9cJvKN/DmQhRLO4FVjH77K07Zbagpxk3EUfV5Aw7wAZqaJrSFXbAPzWE9
      BSC1jrkhO1zhNjTVpB/EcjiEl08fx+gPX2z1eBF6qQXO0QWkDqEDoFQ9dJE+q46W3ilGEulI
      IjbLqf4efiz0cGwrK3bHTpNjgjsvUKFXftHLmWLKJ2Y5cMVIQRAoCAKNVwY4m9i9HXY3Umvq
      ont8lrEEScqMh/zslKTMdlJAhyxVD81H2M1GSx+fkXzWZ9k5aM6rZyxz76KP1vO9BUsEXQZe
      9u//yYr5L9PgCqYXEw5qbYHdB7n3fB3DXC9Wh2T+5vPcSeHx7UGcNP6C0wBg9iBozkqZ98Bs
      B775rQmV2Xt9/cCFnwtWSWxuQFNWti9eVqbBxmYivXinCvr233E7YsSFPf0j/ugfLLzyFk4W
      q4MSzqHTg7dw9+kqkgCQjCLouYqv7tXD3nBQB8xD/A7c/jNori+8t8p4Dg+vd8ETjKZrI4lo
      0IOu6w9xzliVTip/H1arjN4vv8PdaBJACutzQ7h2YwmtnwrF6wCl6qFk5N5NtjfUUisIFLS1
      vNjt5XTe4XGLnD1U5qPeT9jqzT3jyJNOGqTvd+dHyly+72V381nqBIGCoOPZ5m567y9njUAJ
      zgx282KtloIgUFffTnfGAYvTOUYepb+RIxi41IpQ2x/oPGCUep4cqW/51GMfJt/7CVdfkJkA
      8D9BVsFMZDZZKwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Expected Cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANwUlEQVR4nO3d2XIb2WHG8X93YyXBfQF3rZ6RPIlrFpcdX7qyXiRP4LdK7pNKniBJJak8
      gBPbcSqzJfJIoriKiwguIkAQ6EZ3n1wckiMPORpoSJAEzverUgkQtiZ1vrP1OQ3PGGMQcZR/
      2TdQfqSbXToAaZpexXGI3IhLB0CkmykA4jQFQJymAIjTFABxmgIgTlMAxGkKgDhNARCnKQDi
      NAVAnNZeAIxhbXmZanWfp4sr1Go19vf3O3xoIp2XaedJ4XGVncpr4kyGkXzA+sYqheIow8Mp
      aZpqRah0rbYCkBjIBCl+mvKqHjJTniEMm3i+j28MQRB0+jhFOsK77IaYJEkUAOlaGgSL0xQA
      cZoCIE5TAMRpCoA4TQEQpykA4jQFQJymAIjTFABxmgIgTlMAxGkKgDhNARCnKQDiNAVAnKYA
      iNPa2hIZN+s8X1wkUxwixWNsqJ8wDJmdne308Yl0VFsBCHJFMr7B9wMa1Sq7rRrZwjBpqk3x
      0t3aCkDUrGOCIoOlAkmaMFOeII4jbYqXrqdN8eI0DYLFaQqAOE0BEKcpAOI0BUCcpgCI0xQA
      cZoCIE5TAMRpCoA4TQEQpykA4jQFQJymAIjTFABxmgIgTlMAxGltb4p/9vwZ2f5R6vVjZqbG
      icKQubm5Th+fSEe1FQA/VyCb8Wg0Y8qD/ezu7ZAvDGlTvHS99lqAsIEJ+liYHGXvsM6d+bu0
      Wi1tipeup03x4jQNgsVpCoA4TQEQpykA4jQFQJymAIjTFABxmgIgTlMAxGkKgDhNARCnKQDi
      NAVAnKYAiNMUAHGaAiBOaysAxhiOjo5I4haHtSOSJCGO404fm0jHtbUjLA6PWV1dotbMUBos
      kfdiWqnHvbsLJEmC76shke7U1p7gNI4IvX7mpgq8WN5gbGIYyJ49rk3x0q3aawGikN39AwYH
      B2lGMYOlPtI0JZvLkWpPsHQxbYoXp6nzLk5TAMRpCoA47cIAhGFIZaeC5nak110YgCef/Tf/
      9s//TvO6j0bkml0YgHw+pdQ/gXfdRyNyzS4MwNDIJJEfkbvuoxG5ZhcGYGd7l9bRIeF1H43I
      NbswAKOjAwyOTra3TkKki50LgEkTkqCACeuaBZKed66Sryz+H5nJ93hw/5D0Jo5I5BqdawEm
      Hjyi8uwzKA1TuIkjErlG51qAw50KuaExFqanSNGpYult58r3wNgoe+tL/PI/f6sukPS8cwEI
      ckX6+/ogbKJNj9LrLpzpfPzBB0zWQo0BpOddfCLs5Sqra5u0Tu6nccSLxUWOjmqsrG9yfNyg
      Vqtd42GKdMaFLUCzdcTeeoOE052/HqX+LCvrO4wWM6yuL5EvDNPf368vypaudmEABgeGeN3a
      I39yPzzaZ3XrkMnRAXaqdabKEzQbDX1RtnS9cwGImnW+/N0qI3mPJlAEisNlfvJx+fqPTqTD
      zo0BPM9nfm6GwtCQ1gJJzzsXgGy+SKNeo6+Qv+j5Ij3lwkre9wMynup/6X0XToPO37lDs9G4
      7mMRuXbfutTH9zwth5aedy4A9dcVPvv8C558tagASM87F4CoXuXF2jbvP35fK0Gl5+naoOI0
      VfLiNAVAnKYAiNMUAHGaAiBOUwDEaQqAOE0BEKcpAOK0tgKQxi22XlVo1F7z9MUqx8fHVKvV
      Th+bSMe1tejf833iVov9gyMCP2BzbRm/OEypVNKmeOlqbQUgaTXZ2txgfn6Wo709yrNlokZT
      m+Kl62kxnDhNg2BxmgIgTlMAxGkKgDhNARCnKQDiNAVAnKYAiLtSo+vfiqOiCH7zqc4Ei4OO
      6rC5DeNjagHEIcbA8hpsvoKf/RgCXy2AOMIYeLYESQKPfwCeB7S5GlSkqx28hi+fws8+gezv
      F3kFQHrb0hpsbMNPPzxX+EHLoaVXNZrw5Vfw+CGU+s+6PN+kFkB6izG2xl9cgY8+gIHSW5+u
      FkB6R5rC0xcwPgqjIxB893ne9rZERk2WNytMDORYr1SZLY8TRRHlsr46VW6Jwxp89r/w6CFM
      jLX9srZbgK2tbZKkRc7Abv2QfGGEewvTJEmC9y39K5GOS1K858swNIAZHoRi4Z1e3lYLEId1
      dnZ2KE9OsHfUYHZ6gSgKtSlebo4xsLMLXy3Cg7swO/WtA9230RhAuk+zCSsv7QB3fBTyue/9
      VpoFku5hDCwuw8Yr+NFjGB2+9FuqBZDusL0DR8fQV4SpCfCvZiW/WgC53Zoh/M8X0Ndn1/Bc
      ortzEbUAcjs1m3aAOzkOpRIMfPvZ3MtQCyC3S5LAdgWeL8EP34eJ0Y4U/FNqAeR2SBJ4sQqv
      KvCTjyCX7WjBP6UAyM1KEjg4hLUNGBuF+ekrG+C2QwGQm3Fa42++gnvzsDB7LTX+NykAcr2a
      oV2pOToMaQIzU9da43+TBsFyPZqh7d+vrMN796E8Cf7NryFTCyCdYwzsv7bTmUEAP/6R/fsW
      LZ5UAOTqJQmsbdr1+Ed1uDNnz+DeooJ/Sl0guTr1Y6gewdNFmJuxMzqZ213E1ALI5a1twOpL
      yOXgoz+wm89vYW1/EQVA3p0xdu5+Zd1uOC/12WXJuatdp3Mdbnf7JLdL/dj27QdLdkbnwR0Y
      HOia2v4iagHk7cIIwhCePLf3785BeaKrC/2b3ikA+ztbVGoREyODRFHI1NSUAtCLoshuMn++
      bE9SPbxrT1zd4AmrTnmnLpAB4maDyk6NTGGENE31TfG9IrWby/29AyjkSR7/AD75Qztvf/I4
      aXqzx9gB7xSAXDZLkM0yNTVDK4q0Kb7bHdbs1ZKrR3B/wQ5kHz2EIHBmcKgxgEviGF5u2fX2
      QWDn6XM5GB7sye5NOxSAXreza1dcVmvw/gM4bsB02W4t7JGB7GUoAL0kTe1U5cq6nacvT0Cx
      aKctB0vO1vJvowB0s6hl1908W4LDKmSztg+fprZbo/+X76QAdIvUQL1u5+Ure/ZPEMAP37OL
      zvr7VOC/BwXgNjLGXt/+4DXsvYaxYbt7qtQPM2W7dTAIbsV6+m6nANy0NIVWDPsHsLVj+/AP
      7tqlBkMDdmry9Br3GrReOQXguhhjd0UdVqFWtwvIni/bx+Zm7HVv8jnblfF9FfZrogBctTS1
      U40GqOxCZd8uLXh4Dza2bG0+MgxjI+ChmZkbYoyh+elnCsD3kqa2j+579kKt1Zr9t/FRWN+0
      l/GbnoT+IhQKX6+PV61+K5gkofqP/0Tr5UsF4ELG2Fo7atluy86e3do3PWn76VFkv4jh4T04
      PrZLgosFdV26QGtjg4O//wcKH37IwF/8uaMBaLVsN+W4Ya87ubRqa3STwsIcvFiBfB7GR2B4
      yAai1GeXDagm7zrGGJJKhfov/4Pw2TOGf/ELcvNzQC+NAU5r7WZoTwi9qsDxSaEeHLBb9sCe
      HY0iSFJba89O2VmYviJkAhXwHmLSlNq//CuNz78gGBqk+PHH9P3RT/He2Kd8ewNwOmty2hXJ
      52yhboa2jx21YHffPu/+PKxv2RNChQLcmbUrHIsFW7ALefueKtzOMK0W+3/7d2RnZij92Z/i
      5/NfP5amRMsr4HUyAMac1MotW4jjxBbi3QOIQtudSFN4tWtXKS7M2i9BaEZ2duS9+3azdS5n
      C/D0JNQb9naxYC+eCirUco6JInb/+m8ofvwR/T//OaQp8dYWJkk4/tWvSQ4OyM7OUvqTP76C
      AMQxwW8+tV2K+WnYO7BdD4BHD2zXI5u1BXZ2Cg6q9nZf0RZkz7M195vTgSrQ0qa0XidaWSF8
      9py4UiE5eE28s0N2bpb8gwdkpqc4/q/fkpufp/jJx2TKZQiCs282vZoWAM/W2qcFVwVYrohJ
      U9JqjeSoBoAXBCQHBzQ//4Lmk9+RHOzjZbOkR3UyM9MM/tVfEm+/Ijs/R3Z+nmBk5K1f43t7
      xwDS00ySkDYamDA86y7Hr16RNhqkR3WipSWiFy+IK7tk52ZJDqsEAwP4w8MEw0NkxscIRsfI
      zs2SKZftwPaNmr1d7xSA7ZerbFaqlKfGiZoh9+7dJYljWk+fAhCMj5NWq5goAiAzM0O8uXny
      ST6Zcpl4e8vePw1NktiHszlM3LK/DMDL5c7eBzy8bBbTOrkfZADT3ms9Dy9zmddmMK2WvRtk
      7P7n9I3Xtlr2/c691sfLBF+/NpPBpO291iSp/XnD5tljpCkmjgHwi0XSZvPsmP2+PpKTk3Fe
      JoOXz5HWj+1r83k4KWwAwdAQSbV69n6ZsTHivT37Xh74xT6S6iGmFRMMDWGaTZKarX2zU2Va
      LzdIT44zNz9HuLgEcQuCAL9UorW5Ca2YYHiI5PCQ5LCKabXILSzQfPIEE4WYZkh2bo5obQ0v
      8PGKfbam9j2CsTHyjx6Rf/Q+wfAwfqn09ayN5135l7K/UwDW11YhMRxFdbL5Ie4vzJDEMeGv
      fg2APz1F+voQTn7Z/v17pEt2vYvn+7CwgFlZwUQh8db2lf4gcp6XtRMFpyFs+/lpelZB/B7f
      xzutuPwAL/BPVqX6eLmsDV+QsQU2m8HLZu17+icrV/0Ak89hikWCYpHkZNwXBAGpMeB5BJkM
      yclnB0HwvW6/y3PfKQBJ1GB7v8b4yBBJElPs6ydVF0i6mMYA4jQtRRSnKQDiNAVAnKYAiNMU
      AHGaAiBOu/Q1UD3POzu5YIw5O1PXqdvGGHzfP/v3m/rM05+93duX/cx3Pfbv+7o0TfHeOOPa
      yd9vJz7zTd/1+/U8j/8H+SLxnD7XWT8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Expected Deaths' width='192'>
      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
      /CldeWG3CwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Expected vs. Actual Cases' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Impact per State' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Vaccination Impact' width='192'>
      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
      3HnO/x+BcyLHkEXN6gAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
